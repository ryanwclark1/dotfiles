#!/usr/bin/env bash

# MCP Inspector Launcher
# This script provides an easy way to start the MCP Inspector for testing MCP servers

set -euo pipefail

# Colors
GREEN="\033[0;32m"
RED="\033[0;31m"
YELLOW="\033[1;33m"
BLUE="\033[1;34m"
NC="\033[0m"

log() {
    local level="$1"
    local message="$2"
    local color="$NC"
    local emoji=""

    case "$level" in
        INFO) color="$BLUE"; emoji="ℹ️" ;;
        WARN) color="$YELLOW"; emoji="⚠️" ;;
        ERROR) color="$RED"; emoji="❌" ;;
        SUCCESS) color="$GREEN"; emoji="✅" ;;
    esac

    echo -e "${color}${emoji} [$level]${NC} $message"
}

show_help() {
    echo "MCP Inspector Launcher"
    echo "====================="
    echo ""
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  --help, -h          Show this help message"
    echo "  --cli               Run in CLI mode (for scripting)"
    echo "  --server SERVER     Test a specific MCP server"
    echo "  --config FILE       Use configuration file"
    echo "  --method METHOD     CLI mode: specify MCP method"
    echo "  --tool-name NAME    CLI mode: specify tool name"
    echo "  --tool-arg KEY=VAL  CLI mode: specify tool arguments"
    echo ""
    echo "Examples:"
    echo "  $0                                    # Start interactive inspector"
    echo "  $0 --cli npx @modelcontextprotocol/server-everything"
    echo "  $0 --cli --method tools/list"
    echo "  $0 --config my-config.json --server myserver"
    echo ""
    echo "The MCP Inspector is a visual testing tool for MCP servers."
    echo "It helps you test, debug, and explore MCP server capabilities."
}

# Check if MCP Inspector is installed
if ! command -v npx &>/dev/null; then
    log "ERROR" "npx not found. Please install Node.js first."
    exit 1
fi

# Check if MCP Inspector package is available
if ! npx @modelcontextprotocol/inspector --help &>/dev/null; then
    log "ERROR" "MCP Inspector not found. Installing..."
    if npm install -g @modelcontextprotocol/inspector; then
        log "SUCCESS" "MCP Inspector installed successfully!"
    else
        log "ERROR" "Failed to install MCP Inspector"
        exit 1
    fi
fi

# Parse command line arguments
CLI_MODE=false
SERVER_CMD=""
CONFIG_FILE=""
METHOD=""
TOOL_NAME=""
TOOL_ARGS=()

while [[ $# -gt 0 ]]; do
    case $1 in
        --help|-h)
            show_help
            exit 0
            ;;
        --cli)
            CLI_MODE=true
            shift
            ;;
        --server)
            SERVER_CMD="$2"
            shift 2
            ;;
        --config)
            CONFIG_FILE="$2"
            shift 2
            ;;
        --method)
            METHOD="$2"
            shift 2
            ;;
        --tool-name)
            TOOL_NAME="$2"
            shift 2
            ;;
        --tool-arg)
            TOOL_ARGS+=("--tool-arg" "$2")
            shift 2
            ;;
        *)
            if [[ -z "$SERVER_CMD" ]]; then
                SERVER_CMD="$1"
            fi
            shift
            ;;
    esac
done

# Build the command
CMD="npx @modelcontextprotocol/inspector"

if [[ "$CLI_MODE" == "true" ]]; then
    CMD="$CMD --cli"
fi

if [[ -n "$CONFIG_FILE" ]]; then
    CMD="$CMD --config $CONFIG_FILE"
fi

if [[ -n "$SERVER_CMD" ]]; then
    CMD="$CMD $SERVER_CMD"
fi

if [[ -n "$METHOD" ]]; then
    CMD="$CMD --method $METHOD"
fi

if [[ -n "$TOOL_NAME" ]]; then
    CMD="$CMD --tool-name $TOOL_NAME"
fi

if [[ ${#TOOL_ARGS[@]} -gt 0 ]]; then
    CMD="$CMD ${TOOL_ARGS[*]}"
fi

log "INFO" "Starting MCP Inspector..."
log "INFO" "Command: $CMD"

# Execute the command
exec $CMD
